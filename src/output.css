/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@import url('https://fonts.googleapis.com/css2?family=Barlow:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=DM+Sans:ital,opsz,wght@0,9..40,100..1000;1,9..40,100..1000&family=Epilogue:ital,wght@0,100..900;1,100..900&family=Fraunces:ital,opsz,wght@0,9..144,100..900;1,9..144,100..900&family=Inconsolata:wght@200..900&family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&family=Josefin+Sans:ital,wght@0,100..700;1,100..700&family=Libre+Franklin:ital,wght@0,100..900;1,100..900&family=Manrope:wght@200..800&family=Montserrat:ital,wght@0,100..900;1,100..900&family=Noto+Sans:ital,wght@0,100..900;1,100..900&family=Open+Sans:ital,wght@0,300..800;1,300..800&family=Outfit:wght@100..900&family=Overpass:ital,wght@0,100..900;1,100..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Raleway:ital,wght@0,100..900;1,100..900&family=Roboto+Slab:wght@100..900&family=Work+Sans:ital,wght@0,100..900;1,100..900&display=swap');
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-300: oklch(80.8% 0.114 19.571);
    --color-amber-500: oklch(76.9% 0.188 70.08);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --radius-lg: 0.5rem;
    --radius-2xl: 1rem;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .absolute {
    position: absolute;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-\[3px\] {
    right: 3px;
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-\[3\.5px\] {
    bottom: 3.5px;
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-\[3px\] {
    left: 3px;
  }
  .mx-3 {
    margin-inline: calc(var(--spacing) * 3);
  }
  .mx-4 {
    margin-inline: calc(var(--spacing) * 4);
  }
  .mx-\[5px\] {
    margin-inline: 5px;
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-4 {
    margin-block: calc(var(--spacing) * 4);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .inline-block {
    display: inline-block;
  }
  .table {
    display: table;
  }
  .h-\[3px\] {
    height: 3px;
  }
  .h-\[23px\] {
    height: 23px;
  }
  .h-\[30px\] {
    height: 30px;
  }
  .h-\[33px\] {
    height: 33px;
  }
  .h-full {
    height: 100%;
  }
  .min-h-\[100vh\] {
    min-height: 100vh;
  }
  .w-\[23px\] {
    width: 23px;
  }
  .w-\[55px\] {
    width: 55px;
  }
  .w-\[60\%\] {
    width: 60%;
  }
  .w-\[90\%\] {
    width: 90%;
  }
  .w-\[95\%\] {
    width: 95%;
  }
  .w-full {
    width: 100%;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .translate-x-\[25px\] {
    --tw-translate-x: 25px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .space-y-15 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 15) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 15) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-x-2 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-3 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-\[hsl\(0\,0\%\,78\%\)\] {
    border-color: hsl(0,0%,78%);
  }
  .border-\[hsl\(0\,0\%\,93\%\)\] {
    border-color: hsl(0,0%,93%);
  }
  .bg-\[hsl\(\)\] {
    background-color: hsl();
  }
  .bg-\[hsl\(0\,0\%\,93\%\)\] {
    background-color: hsl(0,0%,93%);
  }
  .bg-\[hsl\(3\,86\%\,64\%\)\] {
    background-color: hsl(3,86%,64%);
  }
  .bg-\[hsl\(200\,60\%\,99\%\)\] {
    background-color: hsl(200,60%,99%);
  }
  .bg-\[hsl\(217\,61\%\,90\%\)\] {
    background-color: hsl(217,61%,90%);
  }
  .bg-\[hsl\(226\,11\%\,37\%\)\] {
    background-color: hsl(226,11%,37%);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-linear-180 {
    --tw-gradient-position: 180deg;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: 180deg in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-\[\#EBF2FC\] {
    --tw-gradient-from: #EBF2FC;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[\#EEF8F9\] {
    --tw-gradient-to: #EEF8F9;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .bg-no-repeat {
    background-repeat: no-repeat;
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-2\.5 {
    padding: calc(var(--spacing) * 2.5);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-3\.5 {
    padding: calc(var(--spacing) * 3.5);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .text-center {
    text-align: center;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .font-\[00\] {
    --tw-font-weight: 00;
    font-weight: 00;
  }
  .font-\[500\] {
    --tw-font-weight: 500;
    font-weight: 500;
  }
  .font-\[800\] {
    --tw-font-weight: 800;
    font-weight: 800;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-extrabold {
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-wrap {
    text-wrap: wrap;
  }
  .text-\[hsl\(\)\] {
    color: hsl();
  }
  .text-\[hsl\(0\,0\%\,93\%\)\] {
    color: hsl(0,0%,93%);
  }
  .text-\[hsl\(226\,11\%\,37\%\)\] {
    color: hsl(226,11%,37%);
  }
  .text-\[hsl\(227\,75\%\,14\%\)\] {
    color: hsl(227,75%,14%);
  }
  .text-\[hsl\(228\,45\%\,44\%\)\] {
    color: hsl(228,45%,44%);
  }
  .text-white {
    color: var(--color-white);
  }
  .underline {
    text-decoration-line: underline;
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .peer-checked\:-translate-x-0 {
    &:is(:where(.peer):checked ~ *) {
      --tw-translate-x: calc(var(--spacing) * -0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-checked\:-translate-x-\[25px\] {
    &:is(:where(.peer):checked ~ *) {
      --tw-translate-x: calc(25px * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-checked\:translate-x-0 {
    &:is(:where(.peer):checked ~ *) {
      --tw-translate-x: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-checked\:translate-x-\[-25px\] {
    &:is(:where(.peer):checked ~ *) {
      --tw-translate-x: -25px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-checked\:translate-x-\[25px\] {
    &:is(:where(.peer):checked ~ *) {
      --tw-translate-x: 25px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-checked\:bg-\[hsl\(\)\] {
    &:is(:where(.peer):checked ~ *) {
      background-color: hsl();
    }
  }
  .peer-checked\:bg-\[hsl\(0\,0\%\,93\%\)\] {
    &:is(:where(.peer):checked ~ *) {
      background-color: hsl(0,0%,93%);
    }
  }
  .peer-checked\:bg-\[hsl\(3\,86\%\,64\%\)\] {
    &:is(:where(.peer):checked ~ *) {
      background-color: hsl(3,86%,64%);
    }
  }
  .peer-checked\:bg-\[hsl\(200\,60\%\,99\%\)\] {
    &:is(:where(.peer):checked ~ *) {
      background-color: hsl(200,60%,99%);
    }
  }
  .peer-checked\:bg-\[hsl\(217\,61\%\,90\%\)\] {
    &:is(:where(.peer):checked ~ *) {
      background-color: hsl(217,61%,90%);
    }
  }
  .peer-checked\:bg-\[hsl\(226\,11\%\,37\%\)\] {
    &:is(:where(.peer):checked ~ *) {
      background-color: hsl(226,11%,37%);
    }
  }
  .peer-checked\:bg-\[hsl\(226\,11\%\,37\%3\,86\%\,64\%\)\] {
    &:is(:where(.peer):checked ~ *) {
      background-color: hsl(226,11%,37%3,86%,64%);
    }
  }
  .peer-checked\:bg-\[hsl\(226\,25\%\,17\%\)\] {
    &:is(:where(.peer):checked ~ *) {
      background-color: hsl(226,25%,17%);
    }
  }
  .peer-checked\:bg-\[hsl\(227\,75\%\,14\%\)\] {
    &:is(:where(.peer):checked ~ *) {
      background-color: hsl(227,75%,14%);
    }
  }
  .peer-checked\:bg-\[hsl\] {
    &:is(:where(.peer):checked ~ *) {
      background-color: hsl;
    }
  }
  .peer-checked\:bg-green-500 {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--color-green-500);
    }
  }
  .before\:absolute {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .before\:right-\[3px\] {
    &::before {
      content: var(--tw-content);
      right: 3px;
    }
  }
  .before\:bottom-\[2px\] {
    &::before {
      content: var(--tw-content);
      bottom: 2px;
    }
  }
  .before\:h-\[23px\] {
    &::before {
      content: var(--tw-content);
      height: 23px;
    }
  }
  .before\:w-\[23px\] {
    &::before {
      content: var(--tw-content);
      width: 23px;
    }
  }
  .before\:rounded-full {
    &::before {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
  }
  .before\:bg-white {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-white);
    }
  }
  .before\:content-\[\'\'\] {
    &::before {
      content: var(--tw-content);
      --tw-content: '';
      content: var(--tw-content);
    }
  }
  .hover\:bg-\[hsl\(3\,86\%\,64\%\)\] {
    &:hover {
      @media (hover: hover) {
        background-color: hsl(3,86%,64%);
      }
    }
  }
  .hover\:bg-\[hsl\(200\,60\%\,99\%\,0\.1\)\] {
    &:hover {
      @media (hover: hover) {
        background-color: hsl(200,60%,99%,0.1);
      }
    }
  }
  .hover\:text-\[hsl\(227\,75\%\,14\%\,0\.6\)\] {
    &:hover {
      @media (hover: hover) {
        color: hsl(227,75%,14%,0.6);
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .focus\:border-none {
    &:focus {
      --tw-border-style: none;
      border-style: none;
    }
  }
  .focus\:outline {
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  }
  .focus\:outline-offset-1 {
    &:focus {
      outline-offset: 1px;
    }
  }
  .focus\:outline-\[hsl\(3\,77\%\,44\%\)\] {
    &:focus {
      outline-color: hsl(3,77%,44%);
    }
  }
  .md\:mx-auto {
    @media (width >= 48rem) {
      margin-inline: auto;
    }
  }
  .md\:flex {
    @media (width >= 48rem) {
      display: flex;
    }
  }
  .md\:grid {
    @media (width >= 48rem) {
      display: grid;
    }
  }
  .md\:w-\[80\%\] {
    @media (width >= 48rem) {
      width: 80%;
    }
  }
  .md\:w-\[90\%\] {
    @media (width >= 48rem) {
      width: 90%;
    }
  }
  .md\:w-fit {
    @media (width >= 48rem) {
      width: fit-content;
    }
  }
  .md\:w-full {
    @media (width >= 48rem) {
      width: 100%;
    }
  }
  .md\:auto-rows-auto {
    @media (width >= 48rem) {
      grid-auto-rows: auto;
    }
  }
  .md\:grid-cols-3 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-4 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .md\:items-center {
    @media (width >= 48rem) {
      align-items: center;
    }
  }
  .md\:justify-between {
    @media (width >= 48rem) {
      justify-content: space-between;
    }
  }
  .md\:justify-end {
    @media (width >= 48rem) {
      justify-content: flex-end;
    }
  }
  .md\:gap-2 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 2);
    }
  }
  .md\:gap-4 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 4);
    }
  }
  .md\:gap-\[2px\] {
    @media (width >= 48rem) {
      gap: 2px;
    }
  }
  .md\:gap-x-0\.5 {
    @media (width >= 48rem) {
      column-gap: calc(var(--spacing) * 0.5);
    }
  }
  .md\:gap-x-\[2px\] {
    @media (width >= 48rem) {
      column-gap: 2px;
    }
  }
  .md\:gap-x-\[5rem\] {
    @media (width >= 48rem) {
      column-gap: 5rem;
    }
  }
  .md\:gap-x-\[12\] {
    @media (width >= 48rem) {
      column-gap: 12;
    }
  }
  .md\:gap-x-\[12px\] {
    @media (width >= 48rem) {
      column-gap: 12px;
    }
  }
  .md\:text-left {
    @media (width >= 48rem) {
      text-align: left;
    }
  }
  .dark\:border {
    &:where(.dark, .dark *) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .dark\:border-\[hsl\(\)\] {
    &:where(.dark, .dark *) {
      border-color: hsl();
    }
  }
  .dark\:border-\[hsl\(226\,11\%\,37\%\)\] {
    &:where(.dark, .dark *) {
      border-color: hsl(226,11%,37%);
    }
  }
  .dark\:bg-\[hsl\(225\,23\%\,24\%\)\] {
    &:where(.dark, .dark *) {
      background-color: hsl(225,23%,24%);
    }
  }
  .dark\:bg-\[hsl\(226\,25\%\,17\%\)\] {
    &:where(.dark, .dark *) {
      background-color: hsl(226,25%,17%);
    }
  }
  .dark\:bg-linear-180 {
    &:where(.dark, .dark *) {
      --tw-gradient-position: 180deg;
      @supports (background-image: linear-gradient(in lab, red, red)) {
        --tw-gradient-position: 180deg in oklab;
      }
      background-image: linear-gradient(var(--tw-gradient-stops));
    }
  }
  .dark\:from-\[\#040918\] {
    &:where(.dark, .dark *) {
      --tw-gradient-from: #040918;
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:to-\[\#091540\] {
    &:where(.dark, .dark *) {
      --tw-gradient-to: #091540;
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:text-white {
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .dark\:hover\:border-\[hsl\(3\,86\%\,64\%\)\] {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: hsl(3,86%,64%);
        }
      }
    }
  }
  .dark\:hover\:bg-\[hsl\(226\,11\%\,37\%\)\] {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: hsl(226,11%,37%);
        }
      }
    }
  }
  .hover\:dark\:text-\[hsl\(227\,75\%\,14\%\)\] {
    &:hover {
      @media (hover: hover) {
        &:where(.dark, .dark *) {
          color: hsl(227,75%,14%);
        }
      }
    }
  }
  .dark\:focus\:bg-\[hsl\(226\,11\%\,37\%\)\] {
    &:where(.dark, .dark *) {
      &:focus {
        background-color: hsl(226,11%,37%);
      }
    }
  }
  .dark\:focus\:outline-2 {
    &:where(.dark, .dark *) {
      &:focus {
        outline-style: var(--tw-outline-style);
        outline-width: 2px;
      }
    }
  }
  .dark\:focus\:outline-offset-2 {
    &:where(.dark, .dark *) {
      &:focus {
        outline-offset: 2px;
      }
    }
  }
}
body {
  font-family: "Noto Sans", sans-serif;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-duration: initial;
      --tw-content: "";
    }
  }
}
